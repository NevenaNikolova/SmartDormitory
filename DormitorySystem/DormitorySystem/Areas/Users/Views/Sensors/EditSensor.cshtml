@model EditSensorModel

<h2>Edit Sensor</h2>
<div>
    <p> @Model.Name</p>
</div>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="EditSensor">
            <div >
                <div class="form-row">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" type="text"
                           required minlength="3" maxlength="50" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="form-row">
                    <label asp-for="UserPollingInterval" class="control-label"></label>
                    <input asp-for="UserPollingInterval" class="form-control"
                           value="@Model.UserPollingInterval" min="@Model.MinPollingInterval" />
                    <span asp-validation-for="UserPollingInterval" class="text-danger"></span>
                </div>

                @if (!Model.MeasureType.Contains("true") && !Model.MeasureType.Contains("false"))
                {
                    <h4 class="text-danger">@TempData["Invalid-Min-Max-Value"]</h4>
                    <div class="form-group">
                        <label asp-for="UserMinValue" class="control-label"></label>
                        <input asp-for="UserMinValue" class="form-control"
                               type="number" value="@Model.UserMinValue"
                               required min="@Model.MinValue" max="@Model.MaxValue" />
                        <span asp-validation-for="UserMinValue" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="UserMaxValue" class="control-label"></label>
                        <input asp-for="UserMaxValue" class="form-control" value="@Model.UserMaxValue"
                               type="number" required min="@Model.MinValue" max="@Model.MaxValue" />
                        <span asp-validation-for="UserMaxValue" class="text-danger"></span>
                    </div>
                }

                <div class="form-group">
                    <div class="checkbox">
                        <label>
                            <input asp-for="SendNotification" /> @Html.DisplayNameFor(model => model.SendNotification)
                        </label>
                    </div>
                </div>
                <div class="form-row">
                    <div class="checkbox">
                        <label>
                            <input asp-for="IsPrivate" /> @Html.DisplayNameFor(model => model.IsPrivate)
                        </label>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <input asp-for="Id" class="form-control hidden" />
                <input asp-for="SampleSensorId" class="form-control hidden" />
                <input asp-for="UserId" class="form-control hidden" />
                <input asp-for="MaxValue" class="form-control hidden" />
                <input asp-for="MinValue" class="form-control hidden" />
                <input asp-for="MeasureType" class="form-control hidden" />
                <input asp-for="MinPollingInterval" class="form-control hidden" />
                <input asp-for="Latitude" class="form-control hidden" />
                <input asp-for="Longitude" class="form-control hidden" />
            </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>
@if (User.IsInRole("Admin"))
{
    <div>
        <a asp-area="Admin" asp-controller="Home" asp-action="Index">Back to Admin panel</a>
    </div>
}
else
{
    <div>
        <a asp-action="Index">Back to List</a>
    </div>
}

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}

