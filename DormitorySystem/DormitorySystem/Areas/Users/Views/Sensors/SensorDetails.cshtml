@model UserSensorDetailsModel

<h2>Sensor Details</h2>

<div class="clearfix text-center">
    <div class="col-md-6">
        <h3>Information</h3>
        <hr />
        <table class="table table-striped">
            <tbody>
                <tr>
                    <th>Name</th>
                    <td>@Model.Name</td>
                </tr>
                <tr>
                    <th>Type</th>
                    <td>@Model.Type</td>
                </tr>
                <tr>
                    <th>Registered On</th>
                    <td>@Model.CreatedOn</td>
                </tr>
                <tr>
                    <th>Edited On</th>
                    <td>@Model.ModifiedOn</td>
                </tr>
                <tr>
                    <th>Update Sensor Interval</th>
                    <td>@Model.UserPollingInterval</td>
                </tr>
                <tr>
                    <th>Sensor Minimum Value</th>
                    <td>@Model.UserMinValue @Model.MeasureType</td>
                </tr>
                <tr>
                    <th>Sensor Maximum Value</th>
                    <td>@Model.UserMaxValue @Model.MeasureType</td>
                </tr>
                <tr>
                    <th>Latitude</th>
                    <td>@Model.Latitude</td>
                </tr>
                <tr>
                    <th>Longitude</th>
                    <td>@Model.Longitude</td>
                </tr>
                <tr>
                    <th>Current Value Last Updated On</th>
                    <td>@Model.TimeStamp</td>
                </tr>
                <tr>
                    <th>Notify me if Sensor Values are Out Of Range</th>
                    <td>
                        <div class="checkbox">
                            <input class="col-md-6" asp-for="@Model.SendNotification" disabled>
                        </div>
                    </td>
                </tr>
                <tr>
                    <th>Sensor is Visible only for Me</th>
                    <td>
                        <div class="checkbox">
                            <input class="col-md-6" asp-for="@Model.IsPrivate" disabled>
                        </div>
                    </td>
                </tr>
                <tr>
                    <th>Sensor is Disabled</th>
                    <td>
                        <div class="checkbox">
                            <input class="col-md-6" asp-for="@Model.IsDeleted" disabled>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="col-md-6 text-center">
        <h3>Current Value</h3>
        <hr />
        <partial name="_GaugeMetersPartialView" model="@Model" />
        <div id="error" hidden>
            <h4><span style="color:red">There is no connection to the applications at this moment</span></h4>
        </div>
        <div id="error" hidden>
            <h4><span style="color:red">There is no connection to the applications at this moment</span></h4>
        </div>
        <div id="sensor-is-offline" hidden>
            <h4><span style="color:red">The Sensor is offline</span></h4>
        </div>
    </div>
</div>

@if (Model.IsDeleted)
{
    <div>
        <a asp-area="Users" asp-controller="Sensors" asp-action="EditSensor" asp-route-id="@Model.Id"
           class="btn btn-info disabled" role="button">Edit</a>
        <a asp-area="Users" asp-controller="Sensors" asp-action="DeleteSensor" asp-route-id="@Model.Id"
           class="btn btn-info disabled" role="button">Delete</a>
    </div>
}
else
{
    <div>
        <a asp-area="Users" asp-controller="Sensors" asp-action="EditSensor" asp-route-id="@Model.Id"
           class="btn btn-info active" role="button">Edit</a>

        <a class="btn btn-info delete"
           data-id="@Model.Id"
           @*data-area="Users"*@
           data-controller="Sensors"
           data-action="DeleteSensor"
           data-body-message="You are about to delete this sensor. Are you sure?">Delete</a>

        @*<a id="delete" asp-area="Users" asp-controller="Sensors" asp-action="DeleteSensor" asp-route-id="@Model.Id"
            class="btn btn-info active" role="button">Delete</a>*@
    </div>
}
<br />
@if (User.IsInRole("Admin"))
{
    <div>
        <a asp-area="Admin" asp-controller="ManageSensors" asp-action="AllUserSensors">Back to Admin panel</a>
    </div>
}
else
{
    <a asp-action="Index">Back to List</a>
}


@section Scripts{
    <script src="https://code.jquery.com/jquery-3.3.1.min.js" integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
            crossorigin="anonymous"></script>
    <script src="~/js/GaugeMeter.js"></script>
    <script>
        const pollingInterval = @Model.UserPollingInterval;
        const url = "/api/value" + "?sensorId=" + "@Model.SampleSensorId";
        const mTypeTrue = @Model.MeasureType.Contains("true").ToString().ToLower();
        const mTypeFalse = @Model.MeasureType.Contains("false").ToString().ToLower();
        const mType = mTypeTrue || mTypeFalse;
        let timeStamp = new Date($.now());
        timeStamp.setMinutes(@Model.TimeStamp.Minute);
        timeStamp.setSeconds(@Model.TimeStamp.Second - 10);

        getData();

        $(document).ready(function () {
            setInterval(getData, 5000)
        });

        function getData() {
            if (new Date(timeStamp) < new Date($.now())) {
                $.get(url, function () {
                    if ($('#data-visualization').is(":hidden")) {
                        $('#data-visualization').show();
                        $('#error').hide();
                    }
                })
                    .fail(function () {
                        $('#data-visualization').hide();
                        $('#error').show();
                    })
                    .then(data => drawChart(data, mType)
                    );
            }
        };

        function drawChart(data, measureType)
        {
            if (data.isOnline) {
                timeStamp.setMinutes(data.timeInMinute)
                timeStamp.setSeconds(data.timeInSecond)
                timeStamp.setSeconds(timeStamp.getSeconds() + pollingInterval);
                $('#sensor-is-offline').hide();
                $('#data-visualization').show();

                if (!measureType) {
                    $("#data-visualization").gaugeMeter({
                        text: data.value,
                        used: Math.round(data.value - @Model.UserMinValue),
                        total: @Model.UserMaxValue - @Model.UserMinValue,
                        label: "@Model.Type",
                        append: "@Model.MeasureType"
                    })
                   }
                else {
                    if (data.value) {
                           $('#false').hide();
                           $('#true').show();
                    } else {
                        $('#true').hide();
                        $('#false').show();
                    }
                }
            } else {
                $('#data-visualization').hide();
                $('#sensor-is-offline').show();
            }
        }
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-modal/0.9.1/jquery.modal.min.js"></script>
    <script src="~/js/delete.js"></script>
}

@section Styles{
    <link href="~/css/GaugeStyle.css" rel="stylesheet" />
}
